// scripts/verificar-config.js
require("dotenv").config();
const hre = require("hardhat");

async function main() {
  console.log("üîç Verificando configuraci√≥n de Sepolia...\n");
  
  // Verificar variables de entorno
  const rpcUrl = process.env.SEPOLIA_RPC_URL;
  const privateKey = process.env.PRIVATE_KEY;
  const etherscanKey = process.env.ETHERSCAN_API_KEY;
  
  if (!rpcUrl) {
    console.log("‚ùå SEPOLIA_RPC_URL no configurado");
    return;
  }
  console.log("‚úÖ RPC URL configurado");
  
  if (!privateKey) {
    console.log("‚ùå PRIVATE_KEY no configurado");
    return;
  }
  console.log("‚úÖ Private Key configurado");
  
  if (!etherscanKey) {
    console.log("‚ö†Ô∏è  ETHERSCAN_API_KEY no configurado (verificaci√≥n manual requerida)");
  } else {
    console.log("‚úÖ Etherscan API Key configurado");
  }
  
  // Verificar conexi√≥n y balance
  try {
    const [deployer] = await hre.ethers.getSigners();
    const balance = await deployer.getBalance();
    
    console.log("\nüìä INFORMACI√ìN DE LA CUENTA:");
    console.log(`Direcci√≥n: ${deployer.address}`);
    console.log(`Balance: ${hre.ethers.utils.formatEther(balance)} ETH`);
    console.log(`Red: ${hre.network.name}`);
    console.log(`Chain ID: ${await deployer.getChainId()}`);
    
    if (balance.isZero()) {
      console.log("\nüö® ATENCI√ìN: La cuenta no tiene ETH");
      console.log("Obt√©n ETH de prueba en: https://sepoliafaucet.com/");
    }
    
  } catch (error) {
    console.error("‚ùå Error conectando a Sepolia:", error.message);
  }
}

main().catch(console.error);